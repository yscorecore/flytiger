//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlyTiger.AutoConstructor {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FlyTiger.AutoConstructor.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 The initialization method should have none parameters 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldHasNoneArguments_Description {
            get {
                return ResourceManager.GetString("InitializeMethodShouldHasNoneArguments_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The method &apos;{0}&apos; has been marked as initialization method, but has parameters, none parameters is required in here. 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldHasNoneArguments_MessageFormat {
            get {
                return ResourceManager.GetString("InitializeMethodShouldHasNoneArguments_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The initialization method should have none parameters 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldHasNoneArguments_Title {
            get {
                return ResourceManager.GetString("InitializeMethodShouldHasNoneArguments_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The initialization method should be an instance method 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldNotBeStatic_Description {
            get {
                return ResourceManager.GetString("InitializeMethodShouldNotBeStatic_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The method &apos;{0}&apos; has been marked as initialization method, but it is a static method, instance method is required in here. 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldNotBeStatic_MessageFormat {
            get {
                return ResourceManager.GetString("InitializeMethodShouldNotBeStatic_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The initialization method should be an instance method 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldNotBeStatic_Title {
            get {
                return ResourceManager.GetString("InitializeMethodShouldNotBeStatic_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Multiple initialization methods exist in one class 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldOnlyOne_Description {
            get {
                return ResourceManager.GetString("InitializeMethodShouldOnlyOne_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 There can be at most one initialization method, but {0} initialization methods has been found in class &apos;{1}&apos;. 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldOnlyOne_MessageFormat {
            get {
                return ResourceManager.GetString("InitializeMethodShouldOnlyOne_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Multiple initialization methods exist in one class 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldOnlyOne_Title {
            get {
                return ResourceManager.GetString("InitializeMethodShouldOnlyOne_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The method &apos;{0}&apos; has been marked as initialization method, but the return type is not void. 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldReturnVoid_Description {
            get {
                return ResourceManager.GetString("InitializeMethodShouldReturnVoid_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The initialization method should return void 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldReturnVoid_MessageFormat {
            get {
                return ResourceManager.GetString("InitializeMethodShouldReturnVoid_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The initialization method should return void 的本地化字符串。
        /// </summary>
        internal static string InitializeMethodShouldReturnVoid_Title {
            get {
                return ResourceManager.GetString("InitializeMethodShouldReturnVoid_Title", resourceCulture);
            }
        }
    }
}
